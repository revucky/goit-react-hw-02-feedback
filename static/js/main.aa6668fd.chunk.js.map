{"version":3,"sources":["components/Feedback/FeedbackOptions.js","services/Statistics.jsx","services/Notification.jsx","services/Section.jsx","components/Feedback/Feedback.jsx","components/App/App.jsx","index.js"],"names":["FeedbackOptions","onLeaveFeedback","id","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Section","title","children","Feedback","state","handleClick","e","name","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAiBeA,EAfS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,gCACE,wBAAQC,GAAG,OAAOC,KAAK,SAASC,QAASH,EAAzC,kBAGA,wBAAQC,GAAG,UAAUC,KAAK,SAASC,QAASH,EAA5C,qBAGA,wBAAQC,GAAG,MAAMC,KAAK,SAASC,QAASH,EAAxC,qBCqBSI,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCACQ,+BAAOJ,OAGf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEhB,mDAEE,iCAAOC,EAAP,eCPOC,EAXa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OACE,8BACE,4BAAIA,OCMKC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCCDC,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,YAAc,SAACC,GACb,IAAMC,EAAOD,EAAEE,OAAOnB,GACtB,EAAKoB,UAAS,SAACC,GACb,OAAO,eACJH,EAAOG,EAAUH,GAAQ,O,EAIhCI,mBAAqB,WACnB,OAAO,EAAKP,MAAMX,KAAO,EAAKW,MAAMV,QAAU,EAAKU,MAAMT,K,EAE3DiB,gCAAkC,WAChC,OAAO,EAAKD,qBACRE,KAAKC,MAAO,EAAKV,MAAMX,KAAO,EAAKkB,qBAAwB,KAC3D,G,4CAGN,WACE,OACE,gCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBb,gBAAiB2B,KAAKV,gBAEzC,cAAC,EAAD,CAASJ,MAAM,aAAf,SACGc,KAAKJ,qBACJ,cAAC,EAAD,CACElB,KAAMsB,KAAKX,MAAMX,KACjBC,QAASqB,KAAKX,MAAMV,QACpBC,IAAKoB,KAAKX,MAAMT,IAChBC,MAAOmB,KAAKJ,qBACZd,mBAAoBkB,KAAKH,oCAG3B,cAAC,EAAD,CAAcb,QAAQ,kC,GAxCXiB,IAAMC,WAgDdd,IC3CAe,EAVH,WACV,OACE,8BACE,mCACE,cAAC,EAAD,S,MCDRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.aa6668fd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <div>\n      <button id=\"good\" type=\"button\" onClick={onLeaveFeedback}>\n        Good\n      </button>\n      <button id=\"neutral\" type=\"button\" onClick={onLeaveFeedback}>\n        Neutral\n      </button>\n      <button id=\"bad\" type=\"button\" onClick={onLeaveFeedback}>\n        Bad\n      </button>\n    </div>\n  );\n};\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>\n        Good: <span>{good}</span>\n      </p>\n\n      <p>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total}</span>\n      </p>\n      <p>\n        Positive feedback:\n        <span>{positivePercentage} %</span>\n      </p>\n    </div>\n  );\n};\n\n// Statistics.propTypes = {\n//   good: PropTypes.number,\n//   neutral: PropTypes.number,\n//   bad: PropTypes.number,\n// };\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\n\nexport const Notification = ({ message }) => {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\nexport default Notification;\n","import React from \"react\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"../../services/Statistics\";\nimport Notification from \"../../services/Notification\";\nimport Section from \"../../services/Section\";\n\nclass Feedback extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = (e) => {\n    const name = e.target.id;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return this.countTotalFeedback()\n      ? Math.round((this.state.good / this.countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.handleClick} />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import Feedback from \"../Feedback/Feedback\";\n\nconst App = () => {\n  return (\n    <div>\n      <>\n        <Feedback />\n      </>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}